<div class="row">

	<div class="panel panel-primary">
		<div class="panel-heading clearfix">
			<div class="panel-title">
				Manage Course
				<div class="btn-group pull-right">
					<a asp-action="Create" asp-controller="Courses" class="btn btn-default btn-group-lg ">Add</a>
					<a href="#" class="btn btn-danger  btn-group-lg ">Delete</a>
				</div>
			</div>
		</div>

		<div class="panel-body">
			<div class="row">
				<div class="col-md-12">
					<table class="table table-hover">
						<thead>
							<tr>
								<th>Course Abbreviation</th>
								<th>Course Name</th>
								<th>Created At</th>
                                <th>Created By</th>
								<th>Updated At</th>
                                <th>Updated By</th>
								<th>&nbsp;</th>
							</tr>
						</thead>
						<tbody id="courseTableBody"></tbody>
					</table>
					</div>
				</div>
				</div>
			</div>
	</div>


			<script>


				loadCourseData();
	
				function loadCourseData() {
					//Note: jQuery.ajax(..) is also often written is $.ajax(..)
					var $loadCourseDataHandler = jQuery.ajax({
						url: '/Api/Courses',
						method: 'GET',
						dataType: 'json',
						cache: false,
					});
					$loadCourseDataHandler.done(function (data, textStatus, jqXHR) {
						//This done method will
						//The (data) input parameter automatically captures the response from the
						//Get() API method which is labelled to handle this GET request.

						//I usually use the following code
						//to inspect the returned result captured by the data input parameter
						//from the web server.
						console.log(data);

						//After inspecting the data object with the console.log
						//I have clear picture of the structure and used
						//the following variable to represent the response.d
						var courseList = data;
						var courseId = '';
						var courseAbbreviation = '';
						var courseName = '';
						var createdAt = '';
                        var updatedAt = ''
                        var createdBy = '';
                        var updatedBy = '';
						var $tableElement = null;
						var $cellElement = null;
						var $rowElement = null;
						//-------- Find the table element -----------
						//I am using the $tableElement variable
						//to represent the found HTML element which has a matching id of courseTableBody
						$tableBodyElement = $('#courseTableBody');

						//I want to build rows and cells (using tr and td HTML elements) so that
						//I can display course name, course abbreviation, created at, updated at information
						//within the HTML table element, courseTableBody. Recall that, I have already asked the
						//$tableBodyElement variable to represent (reference) the table element.

						//-------- Begin creating <tr> and <td> HTML element ------
						for (index = 0; index < courseList.length; index++) {
							//Set this course variable to reference a course object
							//inside the courseList Array.
							course = courseList[index];
							//Copy out the course information
							courseId = course.courseId;
							courseAbbreviation = course.courseAbbreviation;
							courseName = course.courseName;
							createdAt = moment(course.createdAt).format("DD/MM/YYYY HH:MM");
                            updatedAt = moment(course.updatedAt).format("DD/MM/YYYY HH:MM");
                            createdBy = course.createdBy;
                            updatedBy = course.updatedBy;
							//Create new HTML <tr> element.
							//At the same time let the $rowElement variable to represent it.
							$rowElement = $('<tr></tr>');
							//Create the 1st cell element which display Course Abbreviation.
							$cellElement = $('<td></td>', { text: courseAbbreviation });
							$rowElement.append($cellElement);
							//Create the 2nd cell element which display Course Name
							$cellElement = $('<td></td>', { text: courseName });
							$rowElement.append($cellElement);
							//Create the 3rd cell element which display Created At information
							$cellElement = $('<td></td>', { text: createdAt });
							$rowElement.append($cellElement);
                            //Create the 4th cell element which display Created By information
                            $cellElement = $('<td></td>', { text: createdBy });
                            $rowElement.append($cellElement);
							//Create the 5th cell element which display Updated At information
							$cellElement = $('<td></td>', { text: updatedAt });
							$rowElement.append($cellElement);
                            //Create the 6th cell element which display Updated By information
                            $cellElement = $('<td></td>', { text: updatedBy });
                            $rowElement.append($cellElement);
							//---------------- Using jQuery() to create the hyperlink element using the <a></a> --------
							$hyperLinkElement = $('<a>Update Course</a>').attr('href', '/Courses/Update/' + courseId);
							$hyperLinkElement.addClass('btn btn-primary');
							//The $hyperLinkElement eventually represents (references) a HTML element which is:
							//<a href="<base url>/Courses/<course id>" class="btn btn-primary" >Update Course</a>
							//-----------------Using jQuery() to creating the 7th cell for the row----------------------
							$cellElement = $('<td></td>');
							//-----------------Add the previous created hyperlink element, $hyperLinkElement
							//                 into the newly created 7th cell.
							//As a result, $cellElement references an element defined by:
							//<td><a href="<base url>/Courses/<course id>" class="btn btn-primary" >Update Course</a></td>
							$cellElement.append($hyperLinkElement);
							$rowElement.append($cellElement);

							//Insert the $rowElement into the table element represented by $tableBodyElement.
							$tableBodyElement.append($rowElement);
							//----End of creating one row to display one course by using <tr> and <td> HTML element ---
							//Proceed to the next course object in the courseList Array.
						}//end of for loop.
					}//end of JavaScript anonymous function
					)//end of the done() method;
					$loadCourseDataHandler.fail(function (data, textStatus, jqXHR) {
						new Noty({
							text: 'Ajax call has failed due to : ' + data.statusText, type: 'error',
							layout: 'center'
						}).show();//end of noty()
					})//end of $loadCourseDataHandler.fail()
				}//end of loadCourseData();

			</script>
